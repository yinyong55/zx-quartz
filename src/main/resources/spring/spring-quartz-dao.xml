<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/data/mongo  
    http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">
	
	<!-- 配置数据源-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName"><value>${jdbc_driverClassName_master}</value></property>
		<property name="url"><value>${jdbc_url_master}</value></property>
		<property name="username"><value>${jdbc_username_master}</value></property>
		<property name="password"><value>${jdbc_password_master}</value></property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive"><value>${maxActive}</value></property>
		<!-- 初始化连接大小 -->
		<property name="initialSize"><value>${initialSize}</value></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait"><value>20000</value></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle"><value>${minIdle}</value></property>
		<!-- 连接属性 -->
		<property name="connectionProperties"><value>clientEncoding=UTF-8</value></property>
	</bean>
	
	<!-- 配置线程池-->
    <bean name="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="15"/>
        <property name="maxPoolSize" value="25"/>
        <property name="queueCapacity" value="100"/>
    </bean>
	
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 配置调度任务-->
    <bean name="schedulerFactoryBean" id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation" value="classpath:quartz.properties"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <!-- 任务唯一的名称，将会持久化到数据库-->
        <property name="schedulerName" value="baseScheduler"/>
        <!-- 每台集群机器部署应用的时候会更新触发器-->
        <property name="overwriteExistingJobs" value="true"/>
        <property name="applicationContextSchedulerContextKey" value="appli"/>
        <property name="jobFactory">
            <bean class="com.zhongxin.quartz.autowired.AutowiringSpringBeanJobFactory"/>
        </property>
        <property name="taskExecutor" ref="executor"/>

    </bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml" />
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:runtimecfg/*.properties</value>
			</list>
		</property>
	</bean>
</beans>