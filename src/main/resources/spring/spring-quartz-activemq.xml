<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL">
			<value>${brokerUrl}</value>
		</property>
		<property name="userName">
			<value>${activemq.userName}</value>
		</property>
		<property name="password">
			<value>${activemq.password}</value>
		</property>
		<property name="useAsyncSend" value="true"></property>
	</bean>

	<bean id="jmsPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="maxConnections" value="${pool.MaxConnections}" />
	</bean>

	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="jmsPooledConnectionFactory" />
	</bean>

	<!-- Spring提供的JMS模版工具. 它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="deliveryPersistent"> <!-- 持久化 -->
			<value>true</value>
		</property>
	</bean>

	<bean id="quartzTopic" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg index="0">
			<value>${quartz.topic.name}</value>
		</constructor-arg>
	</bean>
	
	<bean id="taskReturnQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0">
			<value>${task.return.queue.name}</value>
		</constructor-arg>
	</bean>
	
	<bean id="taskReturnListener" class="com.quartz.listener.TaskReturnListener"/>
	<bean id="quartzListenerContainer"	class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="targetConnectionFactory" />
		<property name="destination" ref="taskReturnQueue" />
		<property name="messageListener" ref="taskReturnListener" />
	</bean>
	
</beans>